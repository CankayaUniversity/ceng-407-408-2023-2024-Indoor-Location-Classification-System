import cv2
import numpy as np
from skimage.metrics import structural_similarity as ssim
import os

def histogram_matching(img1, img2):
    # Histogram eşleme işlemi için renkli görüntüleri gri tonlamaya dönüştürme
    img1_gray = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    # Histogram eşleme işlemi
    matched = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8)).apply(img2_gray)
    
    return matched

def resize_image(image, target_size):
    return cv2.resize(image, target_size, interpolation=cv2.INTER_AREA)

def find_best_match(input_image_path, images_folder_name):
    # Giriş görüntüsünü yükleme
    input_image = cv2.imread(input_image_path)
    target_size = (input_image.shape[1], input_image.shape[0])  # Giriş görüntüsünün boyutları

    # Giriş görüntüsünü boyutlandırma
    input_image_resized = resize_image(input_image, target_size)

    # Giriş görüntüsünü gri tonlamaya dönüştürme
    input_image_gray = cv2.cvtColor(input_image_resized, cv2.COLOR_BGR2GRAY)

    best_match = None
    best_ssim = -1  # En yüksek toplam benzerlik skoru
    threshold = 0.8  # Eşleşme için kabul edilebilir toplam benzerlik eşiği

    # Klasör adını al ve bu klasördeki fotoğrafları kontrol et
    current_directory = os.getcwd()
    images_folder_path = os.path.join(current_directory, images_folder_name)

    for image_file in os.listdir(images_folder_path):
        image_path = os.path.join(images_folder_path, image_file)
        reference_image = cv2.imread(image_path)

        # Referans görüntüsünü boyutlandırma
        reference_image_resized = resize_image(reference_image, target_size)

        # Histogram eşleme işlemini uygula
        matched_image = histogram_matching(input_image_resized, reference_image_resized)

        # Benzerlik skorunu hesapla (Structural Similarity Index - SSIM)
        _, ssim_map = ssim(input_image_gray, matched_image, full=True)

        # SSIM haritasındaki toplam benzerlik skorunu kontrol et
        total_ssim = np.sum(ssim_map)

        # Eğer toplam benzerlik skoru eşiği aşılıyorsa güncelle
        if total_ssim > threshold and total_ssim > best_ssim:
            best_ssim = total_ssim
            best_match = image_file

    return best_match if best_match is not None else "Eşleşme bulunamadı"

# Örnek kullanım
input_image_path = "20231120_221018.jpg"
images_folder_path = "folder"

# En iyi eşleşen fotoğrafı bulma
best_match = find_best_match(input_image_path, images_folder_path)

# Sonucu ekrana yazdırma
print("En çok eşleşen fotoğraf:", best_match)
